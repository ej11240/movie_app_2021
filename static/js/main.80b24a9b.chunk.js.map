{"version":3,"sources":["Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","console","log","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RA2BeA,MAtBf,YAAwD,EAAxCC,GAAyC,IAArCC,EAAoC,EAApCA,KAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAAQC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC5C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACA,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,SAAd,SAAwBD,EAAOI,KAAI,SAACC,EAAMC,GAAP,OAAe,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAC3D,mBAAGL,UAAU,gBAAb,SAA8BH,EAAQS,MAAM,EAAE,cC6B3CC,G,kNAlCbC,MAAQ,CACNC,WAAW,EACXC,OAAO,I,EAGTC,U,sBAAU,8BAAAC,EAAA,sEAC8BC,IAAMC,IAAI,6CADxC,gBACaJ,EADb,EACDK,KAAOA,KAAOL,OACrB,EAAKM,SAAS,CAACN,SAAOD,WAAU,IAFxB,2C,uDAIV,WACEQ,KAAKN,c,oBAGP,WAAU,IAAD,EACmBM,KAAKT,MAAvBC,EADD,EACCA,UAAUC,EADX,EACWA,OAClB,OACE,yBAASV,UAAU,YAAnB,SACIS,EAAa,qBAAKT,UAAU,SAAf,SACb,sBAAMA,UAAU,eAAhB,0BAGA,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GAEV,OADAC,QAAQC,IAAIF,GACL,cAAC,EAAD,CAAsBxB,GAAIwB,EAAMxB,GAAIC,KAAMuB,EAAMvB,KAAMC,MAAOsB,EAAMtB,MAAOC,QAASqB,EAAMrB,QAASC,OAAQoB,EAAMG,mBAAoBtB,OAAQmB,EAAMnB,QAAtImB,EAAMxB,e,GA1BrB4B,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.80b24a9b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport './Movie.css';\r\n\r\nfunction Movie({id, year,title, summary,poster, genres}){\r\n    return(\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title}/>\r\n            <div className=\"movie__data\">\r\n            <h3 className=\"movie_title\">{title}</h3>\r\n            <h5 className=\"movie_year\">{year}</h5>\r\n            <ul className=\"genres\">{genres.map((genre,index)=><li key={index} className=\"genres__genre\">{genre}</li> )}</ul>\r\n            <p className=\"movie_summary\">{summary.slice(0,180)}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nMovie.propTypes = {\r\n    id:PropTypes.number.isRequired,\r\n    year:PropTypes.number.isRequired,\r\n    title:PropTypes.string.isRequired,\r\n    summary:PropTypes.string.isRequired,\r\n    poster:PropTypes.string.isRequired,\r\n    genres:PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport './App.css';\n\nclass App extends React.Component {\n  \n  state = {\n    isLoading: true,\n    movies:[]\n  }\n  \n  getMovies=async()=>{\n    const {data: {data :{movies}}} =await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    this.setState({movies,isLoading:false});\n  }\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading,movies}=this.state;\n    return (\n      <section className=\"container\">\n        { isLoading ? (<div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie =>{\n              console.log(movie);\n              return <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres} />\n              })\n            }\n          </div>\n        )}\n      </section>\n      );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}